{"filter":false,"title":"simple-todos.js","tooltip":"/simple-todos.js","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":39,"column":1},"action":"remove","lines":["// simple-todos.js","Tasks = new Mongo.Collection(\"tasks\");","","if (Meteor.isClient) {","  // This code only runs on the client","  Template.body.helpers({","    tasks: function () {","      return Tasks.find({}, {sort: {createdAt: -1}});","    }","  });","  // Inside the if (Meteor.isClient) block, right after Template.body.helpers:","  Template.body.events({","    \"submit .new-task\": function (event) {","      // This function is called when the new task form is submitted","","      var text = event.target.text.value;","      console.log(event);","","      Tasks.insert({","        text: text,","        createdAt: new Date() // current time","      });","","      // Clear form","      event.target.text.value = \"\";","","      // Prevent default form submit","      return false;","    }","  });","  Template.task.events({","  \"click .toggle-checked\": function () {","    // Set the checked property to the opposite of its current value","    Tasks.update(this._id, {$set: {checked: ! this.checked}});","  },","  \"click .delete\": function () {","    Tasks.remove(this._id);","  }","  });","}"]},{"start":{"row":0,"column":0},"end":{"row":52,"column":1},"action":"insert","lines":["Tasks = new Mongo.Collection(\"tasks\");","","if (Meteor.isClient) {","  // This code only runs on the client","  Template.body.helpers({","    tasks: function () {","      if (Session.get(\"hideCompleted\")) {","        // If hide completed is checked, filter tasks","        return Tasks.find({checked: {$ne: true}}, {sort: {createdAt: -1}});","      } else {","        // Otherwise, return all of the tasks","        return Tasks.find({}, {sort: {createdAt: -1}});","      }","    },","    hideCompleted: function () {","      return Session.get(\"hideCompleted\");","    },","    incompleteCount: function () {","      return Tasks.find({checked: {$ne: true}}).count();","    }","  });","","  Template.body.events({","    \"submit .new-task\": function (event) {","      // This function is called when the new task form is submitted","      var text = event.target.text.value;","","      Tasks.insert({","        text: text,","        createdAt: new Date() // current time","      });","","      // Clear form","      event.target.text.value = \"\";","","      // Prevent default form submit","      return false;","    },","    \"change .hide-completed input\": function (event) {","      Session.set(\"hideCompleted\", event.target.checked);","    }","  });","","  Template.task.events({","    \"click .toggle-checked\": function () {","      // Set the checked property to the opposite of its current value","      Tasks.update(this._id, {$set: {checked: ! this.checked}});","    },","    \"click .delete\": function () {","      Tasks.remove(this._id);","    }","  });","}"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":3,"column":38},"end":{"row":3,"column":38},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1427696453384,"hash":"f30d25c17df695f5b163531b705a64025fa73fad"}