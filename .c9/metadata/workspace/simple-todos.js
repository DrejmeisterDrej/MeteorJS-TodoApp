{"filter":false,"title":"simple-todos.js","tooltip":"/simple-todos.js","undoManager":{"mark":95,"position":95,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":39,"column":1},"action":"remove","lines":["// simple-todos.js","Tasks = new Mongo.Collection(\"tasks\");","","if (Meteor.isClient) {","  // This code only runs on the client","  Template.body.helpers({","    tasks: function () {","      return Tasks.find({}, {sort: {createdAt: -1}});","    }","  });","  // Inside the if (Meteor.isClient) block, right after Template.body.helpers:","  Template.body.events({","    \"submit .new-task\": function (event) {","      // This function is called when the new task form is submitted","","      var text = event.target.text.value;","      console.log(event);","","      Tasks.insert({","        text: text,","        createdAt: new Date() // current time","      });","","      // Clear form","      event.target.text.value = \"\";","","      // Prevent default form submit","      return false;","    }","  });","  Template.task.events({","  \"click .toggle-checked\": function () {","    // Set the checked property to the opposite of its current value","    Tasks.update(this._id, {$set: {checked: ! this.checked}});","  },","  \"click .delete\": function () {","    Tasks.remove(this._id);","  }","  });","}"]},{"start":{"row":0,"column":0},"end":{"row":52,"column":1},"action":"insert","lines":["Tasks = new Mongo.Collection(\"tasks\");","","if (Meteor.isClient) {","  // This code only runs on the client","  Template.body.helpers({","    tasks: function () {","      if (Session.get(\"hideCompleted\")) {","        // If hide completed is checked, filter tasks","        return Tasks.find({checked: {$ne: true}}, {sort: {createdAt: -1}});","      } else {","        // Otherwise, return all of the tasks","        return Tasks.find({}, {sort: {createdAt: -1}});","      }","    },","    hideCompleted: function () {","      return Session.get(\"hideCompleted\");","    },","    incompleteCount: function () {","      return Tasks.find({checked: {$ne: true}}).count();","    }","  });","","  Template.body.events({","    \"submit .new-task\": function (event) {","      // This function is called when the new task form is submitted","      var text = event.target.text.value;","","      Tasks.insert({","        text: text,","        createdAt: new Date() // current time","      });","","      // Clear form","      event.target.text.value = \"\";","","      // Prevent default form submit","      return false;","    },","    \"change .hide-completed input\": function (event) {","      Session.set(\"hideCompleted\", event.target.checked);","    }","  });","","  Template.task.events({","    \"click .toggle-checked\": function () {","      // Set the checked property to the opposite of its current value","      Tasks.update(this._id, {$set: {checked: ! this.checked}});","    },","    \"click .delete\": function () {","      Tasks.remove(this._id);","    }","  });","}"]}]}],[{"group":"doc","deltas":[{"start":{"row":51,"column":5},"end":{"row":52,"column":0},"action":"insert","lines":["",""]},{"start":{"row":52,"column":0},"end":{"row":52,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":52,"column":2},"end":{"row":53,"column":0},"action":"insert","lines":["",""]},{"start":{"row":53,"column":0},"end":{"row":53,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":2},"end":{"row":55,"column":3},"action":"insert","lines":["Accounts.ui.config({","  passwordSignupFields: \"USERNAME_ONLY\"","});"]}]}],[{"group":"doc","deltas":[{"start":{"row":55,"column":0},"end":{"row":55,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":54,"column":2},"end":{"row":54,"column":4},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":56,"column":1},"action":"remove","lines":["Tasks = new Mongo.Collection(\"tasks\");","","if (Meteor.isClient) {","  // This code only runs on the client","  Template.body.helpers({","    tasks: function () {","      if (Session.get(\"hideCompleted\")) {","        // If hide completed is checked, filter tasks","        return Tasks.find({checked: {$ne: true}}, {sort: {createdAt: -1}});","      } else {","        // Otherwise, return all of the tasks","        return Tasks.find({}, {sort: {createdAt: -1}});","      }","    },","    hideCompleted: function () {","      return Session.get(\"hideCompleted\");","    },","    incompleteCount: function () {","      return Tasks.find({checked: {$ne: true}}).count();","    }","  });","","  Template.body.events({","    \"submit .new-task\": function (event) {","      // This function is called when the new task form is submitted","      var text = event.target.text.value;","","      Tasks.insert({","        text: text,","        createdAt: new Date() // current time","      });","","      // Clear form","      event.target.text.value = \"\";","","      // Prevent default form submit","      return false;","    },","    \"change .hide-completed input\": function (event) {","      Session.set(\"hideCompleted\", event.target.checked);","    }","  });","","  Template.task.events({","    \"click .toggle-checked\": function () {","      // Set the checked property to the opposite of its current value","      Tasks.update(this._id, {$set: {checked: ! this.checked}});","    },","    \"click .delete\": function () {","      Tasks.remove(this._id);","    }","  });","  ","  Accounts.ui.config({","    passwordSignupFields: \"USERNAME_ONLY\"","  });","}"]},{"start":{"row":0,"column":0},"end":{"row":58,"column":1},"action":"insert","lines":["Tasks = new Mongo.Collection(\"tasks\");","","if (Meteor.isClient) {","  // This code only runs on the client","  Template.body.helpers({","    tasks: function () {","      if (Session.get(\"hideCompleted\")) {","        // If hide completed is checked, filter tasks","        return Tasks.find({checked: {$ne: true}}, {sort: {createdAt: -1}});","      } else {","        // Otherwise, return all of the tasks","        return Tasks.find({}, {sort: {createdAt: -1}});","      }","    },","    hideCompleted: function () {","      return Session.get(\"hideCompleted\");","    },","    incompleteCount: function () {","      return Tasks.find({checked: {$ne: true}}).count();","    }","  });","","  Template.body.events({","    \"submit .new-task\": function (event) {","      // This function is called when the new task form is submitted","      var text = event.target.text.value;","","      Tasks.insert({","        text: text,","        createdAt: new Date(),            // current time","        owner: Meteor.userId(),           // _id of logged in user","        username: Meteor.user().username  // username of logged in user","      });","","      // Clear form","      event.target.text.value = \"\";","","      // Prevent default form submit","      return false;","    },","    \"change .hide-completed input\": function (event) {","      Session.set(\"hideCompleted\", event.target.checked);","    }","  });","","  Template.task.events({","    \"click .toggle-checked\": function () {","      // Set the checked property to the opposite of its current value","      Tasks.update(this._id, {$set: {checked: ! this.checked}});","    },","    \"click .delete\": function () {","      Tasks.remove(this._id);","    }","  });","","  Accounts.ui.config({","    passwordSignupFields: \"USERNAME_ONLY\"","  });","}"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":58,"column":1},"action":"remove","lines":["Tasks = new Mongo.Collection(\"tasks\");","","if (Meteor.isClient) {","  // This code only runs on the client","  Template.body.helpers({","    tasks: function () {","      if (Session.get(\"hideCompleted\")) {","        // If hide completed is checked, filter tasks","        return Tasks.find({checked: {$ne: true}}, {sort: {createdAt: -1}});","      } else {","        // Otherwise, return all of the tasks","        return Tasks.find({}, {sort: {createdAt: -1}});","      }","    },","    hideCompleted: function () {","      return Session.get(\"hideCompleted\");","    },","    incompleteCount: function () {","      return Tasks.find({checked: {$ne: true}}).count();","    }","  });","","  Template.body.events({","    \"submit .new-task\": function (event) {","      // This function is called when the new task form is submitted","      var text = event.target.text.value;","","      Tasks.insert({","        text: text,","        createdAt: new Date(),            // current time","        owner: Meteor.userId(),           // _id of logged in user","        username: Meteor.user().username  // username of logged in user","      });","","      // Clear form","      event.target.text.value = \"\";","","      // Prevent default form submit","      return false;","    },","    \"change .hide-completed input\": function (event) {","      Session.set(\"hideCompleted\", event.target.checked);","    }","  });","","  Template.task.events({","    \"click .toggle-checked\": function () {","      // Set the checked property to the opposite of its current value","      Tasks.update(this._id, {$set: {checked: ! this.checked}});","    },","    \"click .delete\": function () {","      Tasks.remove(this._id);","    }","  });","","  Accounts.ui.config({","    passwordSignupFields: \"USERNAME_ONLY\"","  });","}"]},{"start":{"row":0,"column":0},"end":{"row":75,"column":3},"action":"insert","lines":["Tasks = new Mongo.Collection(\"tasks\");","","if (Meteor.isClient) {","  // This code only runs on the client","  Template.body.helpers({","    tasks: function () {","      if (Session.get(\"hideCompleted\")) {","        // If hide completed is checked, filter tasks","        return Tasks.find({checked: {$ne: true}}, {sort: {createdAt: -1}});","      } else {","        // Otherwise, return all of the tasks","        return Tasks.find({}, {sort: {createdAt: -1}});","      }","    },","    hideCompleted: function () {","      return Session.get(\"hideCompleted\");","    },","    incompleteCount: function () {","      return Tasks.find({checked: {$ne: true}}).count();","    }","  });","","  Template.body.events({","    \"submit .new-task\": function (event) {","      // This function is called when the new task form is submitted","      var text = event.target.text.value;","","      Meteor.call(\"addTask\", text);","","      // Clear form","      event.target.text.value = \"\";","","      // Prevent default form submit","      return false;","    },","    \"change .hide-completed input\": function (event) {","      Session.set(\"hideCompleted\", event.target.checked);","    }","  });","","  Template.task.events({","    \"click .toggle-checked\": function () {","      // Set the checked property to the opposite of its current value","      Meteor.call(\"setChecked\", this._id, ! this.checked);","    },","    \"click .delete\": function () {","      Meteor.call(\"deleteTask\", this._id);","    }","  });","","  Accounts.ui.config({","    passwordSignupFields: \"USERNAME_ONLY\"","  });","}","","Meteor.methods({","  addTask: function (text) {","    // Make sure the user is logged in before inserting a task","    if (! Meteor.userId()) {","      throw new Meteor.Error(\"not-authorized\");","    }","","    Tasks.insert({","      text: text,","      createdAt: new Date(),","      owner: Meteor.userId(),","      username: Meteor.user().username","    });","  },","  deleteTask: function (taskId) {","    Tasks.remove(taskId);","  },","  setChecked: function (taskId, setChecked) {","    Tasks.update(taskId, { $set: { checked: setChecked} });","  }","});"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":0},"end":{"row":67,"column":7},"action":"remove","lines":["    Tasks.insert({","      text: text,","      createdAt: new Date(),","      owner: Meteor.userId(),","      username: Meteor.user().username","    });"]},{"start":{"row":62,"column":0},"end":{"row":62,"column":1},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":0},"end":{"row":62,"column":1},"action":"remove","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":0},"end":{"row":62,"column":6},"action":"insert","lines":["module"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":5},"end":{"row":62,"column":6},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":4},"end":{"row":62,"column":5},"action":"remove","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":3},"end":{"row":62,"column":4},"action":"remove","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":2},"end":{"row":62,"column":3},"action":"remove","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":1},"end":{"row":62,"column":2},"action":"remove","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":0},"end":{"row":62,"column":1},"action":"remove","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":0},"end":{"row":62,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":2},"end":{"row":62,"column":4},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":2},"end":{"row":62,"column":4},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":2},"end":{"row":62,"column":3},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":3},"end":{"row":62,"column":4},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":3},"end":{"row":62,"column":4},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":2},"end":{"row":62,"column":3},"action":"remove","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":2},"end":{"row":62,"column":3},"action":"insert","lines":["M"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":3},"end":{"row":62,"column":4},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":2},"end":{"row":62,"column":4},"action":"remove","lines":["Me"]},{"start":{"row":62,"column":2},"end":{"row":62,"column":8},"action":"insert","lines":["Meteor"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":8},"end":{"row":62,"column":9},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":9},"end":{"row":62,"column":10},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":10},"end":{"row":62,"column":11},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":11},"end":{"row":62,"column":12},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":12},"end":{"row":62,"column":13},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":13},"end":{"row":62,"column":15},"action":"insert","lines":["()"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":14},"end":{"row":62,"column":16},"action":"insert","lines":["\"\""]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":15},"end":{"row":62,"column":16},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":16},"end":{"row":62,"column":17},"action":"insert","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":17},"end":{"row":62,"column":18},"action":"insert","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":15},"end":{"row":62,"column":18},"action":"remove","lines":["add"]},{"start":{"row":62,"column":15},"end":{"row":62,"column":22},"action":"insert","lines":["addTask"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":23},"end":{"row":62,"column":24},"action":"insert","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":24},"end":{"row":62,"column":25},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":25},"end":{"row":62,"column":26},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":26},"end":{"row":62,"column":27},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":27},"end":{"row":62,"column":28},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":28},"end":{"row":62,"column":29},"action":"insert","lines":["x"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":28},"end":{"row":62,"column":29},"action":"remove","lines":["x"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":27},"end":{"row":62,"column":28},"action":"remove","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":27},"end":{"row":62,"column":28},"action":"insert","lines":["x"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":28},"end":{"row":62,"column":29},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":30},"end":{"row":62,"column":31},"action":"insert","lines":[";"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":70,"column":3},"action":"remove","lines":["Tasks = new Mongo.Collection(\"tasks\");","","if (Meteor.isClient) {","  // This code only runs on the client","  Template.body.helpers({","    tasks: function () {","      if (Session.get(\"hideCompleted\")) {","        // If hide completed is checked, filter tasks","        return Tasks.find({checked: {$ne: true}}, {sort: {createdAt: -1}});","      } else {","        // Otherwise, return all of the tasks","        return Tasks.find({}, {sort: {createdAt: -1}});","      }","    },","    hideCompleted: function () {","      return Session.get(\"hideCompleted\");","    },","    incompleteCount: function () {","      return Tasks.find({checked: {$ne: true}}).count();","    }","  });","","  Template.body.events({","    \"submit .new-task\": function (event) {","      // This function is called when the new task form is submitted","      var text = event.target.text.value;","","      Meteor.call(\"addTask\", text);","","      // Clear form","      event.target.text.value = \"\";","","      // Prevent default form submit","      return false;","    },","    \"change .hide-completed input\": function (event) {","      Session.set(\"hideCompleted\", event.target.checked);","    }","  });","","  Template.task.events({","    \"click .toggle-checked\": function () {","      // Set the checked property to the opposite of its current value","      Meteor.call(\"setChecked\", this._id, ! this.checked);","    },","    \"click .delete\": function () {","      Meteor.call(\"deleteTask\", this._id);","    }","  });","","  Accounts.ui.config({","    passwordSignupFields: \"USERNAME_ONLY\"","  });","}","","Meteor.methods({","  addTask: function (text) {","    // Make sure the user is logged in before inserting a task","    if (! Meteor.userId()) {","      throw new Meteor.Error(\"not-authorized\");","    }","","  Meteor.call(\"addTask\", text);","  },","  deleteTask: function (taskId) {","    Tasks.remove(taskId);","  },","  setChecked: function (taskId, setChecked) {","    Tasks.update(taskId, { $set: { checked: setChecked} });","  }","});"]},{"start":{"row":0,"column":0},"end":{"row":75,"column":3},"action":"insert","lines":["Tasks = new Mongo.Collection(\"tasks\");","","if (Meteor.isClient) {","  // This code only runs on the client","  Template.body.helpers({","    tasks: function () {","      if (Session.get(\"hideCompleted\")) {","        // If hide completed is checked, filter tasks","        return Tasks.find({checked: {$ne: true}}, {sort: {createdAt: -1}});","      } else {","        // Otherwise, return all of the tasks","        return Tasks.find({}, {sort: {createdAt: -1}});","      }","    },","    hideCompleted: function () {","      return Session.get(\"hideCompleted\");","    },","    incompleteCount: function () {","      return Tasks.find({checked: {$ne: true}}).count();","    }","  });","","  Template.body.events({","    \"submit .new-task\": function (event) {","      // This function is called when the new task form is submitted","      var text = event.target.text.value;","","      Meteor.call(\"addTask\", text);","","      // Clear form","      event.target.text.value = \"\";","","      // Prevent default form submit","      return false;","    },","    \"change .hide-completed input\": function (event) {","      Session.set(\"hideCompleted\", event.target.checked);","    }","  });","","  Template.task.events({","    \"click .toggle-checked\": function () {","      // Set the checked property to the opposite of its current value","      Meteor.call(\"setChecked\", this._id, ! this.checked);","    },","    \"click .delete\": function () {","      Meteor.call(\"deleteTask\", this._id);","    }","  });","","  Accounts.ui.config({","    passwordSignupFields: \"USERNAME_ONLY\"","  });","}","","Meteor.methods({","  addTask: function (text) {","    // Make sure the user is logged in before inserting a task","    if (! Meteor.userId()) {","      throw new Meteor.Error(\"not-authorized\");","    }","","    Tasks.insert({","      text: text,","      createdAt: new Date(),","      owner: Meteor.userId(),","      username: Meteor.user().username","    });","  },","  deleteTask: function (taskId) {","    Tasks.remove(taskId);","  },","  setChecked: function (taskId, setChecked) {","    Tasks.update(taskId, { $set: { checked: setChecked} });","  }","});"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":75,"column":3},"action":"remove","lines":["Tasks = new Mongo.Collection(\"tasks\");","","if (Meteor.isClient) {","  // This code only runs on the client","  Template.body.helpers({","    tasks: function () {","      if (Session.get(\"hideCompleted\")) {","        // If hide completed is checked, filter tasks","        return Tasks.find({checked: {$ne: true}}, {sort: {createdAt: -1}});","      } else {","        // Otherwise, return all of the tasks","        return Tasks.find({}, {sort: {createdAt: -1}});","      }","    },","    hideCompleted: function () {","      return Session.get(\"hideCompleted\");","    },","    incompleteCount: function () {","      return Tasks.find({checked: {$ne: true}}).count();","    }","  });","","  Template.body.events({","    \"submit .new-task\": function (event) {","      // This function is called when the new task form is submitted","      var text = event.target.text.value;","","      Meteor.call(\"addTask\", text);","","      // Clear form","      event.target.text.value = \"\";","","      // Prevent default form submit","      return false;","    },","    \"change .hide-completed input\": function (event) {","      Session.set(\"hideCompleted\", event.target.checked);","    }","  });","","  Template.task.events({","    \"click .toggle-checked\": function () {","      // Set the checked property to the opposite of its current value","      Meteor.call(\"setChecked\", this._id, ! this.checked);","    },","    \"click .delete\": function () {","      Meteor.call(\"deleteTask\", this._id);","    }","  });","","  Accounts.ui.config({","    passwordSignupFields: \"USERNAME_ONLY\"","  });","}","","Meteor.methods({","  addTask: function (text) {","    // Make sure the user is logged in before inserting a task","    if (! Meteor.userId()) {","      throw new Meteor.Error(\"not-authorized\");","    }","","    Tasks.insert({","      text: text,","      createdAt: new Date(),","      owner: Meteor.userId(),","      username: Meteor.user().username","    });","  },","  deleteTask: function (taskId) {","    Tasks.remove(taskId);","  },","  setChecked: function (taskId, setChecked) {","    Tasks.update(taskId, { $set: { checked: setChecked} });","  }","});"]},{"start":{"row":0,"column":0},"end":{"row":75,"column":3},"action":"insert","lines":["Tasks = new Mongo.Collection(\"tasks\");","","if (Meteor.isClient) {","  // This code only runs on the client","  Template.body.helpers({","    tasks: function () {","      if (Session.get(\"hideCompleted\")) {","        // If hide completed is checked, filter tasks","        return Tasks.find({checked: {$ne: true}}, {sort: {createdAt: -1}});","      } else {","        // Otherwise, return all of the tasks","        return Tasks.find({}, {sort: {createdAt: -1}});","      }","    },","    hideCompleted: function () {","      return Session.get(\"hideCompleted\");","    },","    incompleteCount: function () {","      return Tasks.find({checked: {$ne: true}}).count();","    }","  });","","  Template.body.events({","    \"submit .new-task\": function (event) {","      // This function is called when the new task form is submitted","      var text = event.target.text.value;","","      Meteor.call(\"addTask\", text);","","      // Clear form","      event.target.text.value = \"\";","","      // Prevent default form submit","      return false;","    },","    \"change .hide-completed input\": function (event) {","      Session.set(\"hideCompleted\", event.target.checked);","    }","  });","","  Template.task.events({","    \"click .toggle-checked\": function () {","      // Set the checked property to the opposite of its current value","      Meteor.call(\"setChecked\", this._id, ! this.checked);","    },","    \"click .delete\": function () {","      Meteor.call(\"deleteTask\", this._id);","    }","  });","","  Accounts.ui.config({","    passwordSignupFields: \"USERNAME_ONLY\"","  });","}","","Meteor.methods({","  addTask: function (text) {","    // Make sure the user is logged in before inserting a task","    if (! Meteor.userId()) {","      throw new Meteor.Error(\"not-authorized\");","    }","","    Tasks.insert({","      text: text,","      createdAt: new Date(),","      owner: Meteor.userId(),","      username: Meteor.user().username","    });","  },","  deleteTask: function (taskId) {","    Tasks.remove(taskId);","  },","  setChecked: function (taskId, setChecked) {","    Tasks.update(taskId, { $set: { checked: setChecked} });","  }","});"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":75,"column":3},"action":"remove","lines":["Tasks = new Mongo.Collection(\"tasks\");","","if (Meteor.isClient) {","  // This code only runs on the client","  Template.body.helpers({","    tasks: function () {","      if (Session.get(\"hideCompleted\")) {","        // If hide completed is checked, filter tasks","        return Tasks.find({checked: {$ne: true}}, {sort: {createdAt: -1}});","      } else {","        // Otherwise, return all of the tasks","        return Tasks.find({}, {sort: {createdAt: -1}});","      }","    },","    hideCompleted: function () {","      return Session.get(\"hideCompleted\");","    },","    incompleteCount: function () {","      return Tasks.find({checked: {$ne: true}}).count();","    }","  });","","  Template.body.events({","    \"submit .new-task\": function (event) {","      // This function is called when the new task form is submitted","      var text = event.target.text.value;","","      Meteor.call(\"addTask\", text);","","      // Clear form","      event.target.text.value = \"\";","","      // Prevent default form submit","      return false;","    },","    \"change .hide-completed input\": function (event) {","      Session.set(\"hideCompleted\", event.target.checked);","    }","  });","","  Template.task.events({","    \"click .toggle-checked\": function () {","      // Set the checked property to the opposite of its current value","      Meteor.call(\"setChecked\", this._id, ! this.checked);","    },","    \"click .delete\": function () {","      Meteor.call(\"deleteTask\", this._id);","    }","  });","","  Accounts.ui.config({","    passwordSignupFields: \"USERNAME_ONLY\"","  });","}","","Meteor.methods({","  addTask: function (text) {","    // Make sure the user is logged in before inserting a task","    if (! Meteor.userId()) {","      throw new Meteor.Error(\"not-authorized\");","    }","","    Tasks.insert({","      text: text,","      createdAt: new Date(),","      owner: Meteor.userId(),","      username: Meteor.user().username","    });","  },","  deleteTask: function (taskId) {","    Tasks.remove(taskId);","  },","  setChecked: function (taskId, setChecked) {","    Tasks.update(taskId, { $set: { checked: setChecked} });","  }","});"]},{"start":{"row":0,"column":0},"end":{"row":120,"column":1},"action":"insert","lines":["Tasks = new Mongo.Collection(\"tasks\");","","if (Meteor.isClient) {","  // This code only runs on the client","  Meteor.subscribe(\"tasks\");","","  Template.body.helpers({","    tasks: function () {","      if (Session.get(\"hideCompleted\")) {","        // If hide completed is checked, filter tasks","        return Tasks.find({checked: {$ne: true}}, {sort: {createdAt: -1}});","      } else {","        // Otherwise, return all of the tasks","        return Tasks.find({}, {sort: {createdAt: -1}});","      }","    },","    hideCompleted: function () {","      return Session.get(\"hideCompleted\");","    },","    incompleteCount: function () {","      return Tasks.find({checked: {$ne: true}}).count();","    }","  });","","  Template.body.events({","    \"submit .new-task\": function (event) {","      // This function is called when the new task form is submitted","      var text = event.target.text.value;","","      Meteor.call(\"addTask\", text);","","      // Clear form","      event.target.text.value = \"\";","","      // Prevent default form submit","      return false;","    },","    \"change .hide-completed input\": function (event) {","      Session.set(\"hideCompleted\", event.target.checked);","    }","  });","","  Template.task.events({","    \"click .toggle-checked\": function () {","      // Set the checked property to the opposite of its current value","      Meteor.call(\"setChecked\", this._id, ! this.checked);","    },","    \"click .delete\": function () {","      Meteor.call(\"deleteTask\", this._id);","    },","    \"click .toggle-private\": function () {","      Meteor.call(\"setPrivate\", this._id, ! this.private);","    }","  });","","  Template.task.helpers({","    isOwner: function () {","      return this.owner === Meteor.userId();","    }","  });","","  Accounts.ui.config({","    passwordSignupFields: \"USERNAME_ONLY\"","  });","}","","Meteor.methods({","  addTask: function (text) {","    // Make sure the user is logged in before inserting a task","    if (! Meteor.userId()) {","      throw new Meteor.Error(\"not-authorized\");","    }","","    Tasks.insert({","      text: text,","      createdAt: new Date(),","      owner: Meteor.userId(),","      username: Meteor.user().username","    });","  },","  deleteTask: function (taskId) {","    var task = Tasks.findOne(taskId);","    if (task.private && task.owner !== Meteor.userId()) {","      // If the task is private, make sure only the owner can delete it","      throw new Meteor.Error(\"not-authorized\");","    }","","    Tasks.remove(taskId);","  },","  setChecked: function (taskId, setChecked) {","    var task = Tasks.findOne(taskId);","    if (task.private && task.owner !== Meteor.userId()) {","      // If the task is private, make sure only the owner can check it off","      throw new Meteor.Error(\"not-authorized\");","    }","","    Tasks.update(taskId, { $set: { checked: setChecked} });","  },","  setPrivate: function (taskId, setToPrivate) {","    var task = Tasks.findOne(taskId);","","    // Make sure only the task owner can make a task private","    if (task.owner !== Meteor.userId()) {","      throw new Meteor.Error(\"not-authorized\");","    }","","    Tasks.update(taskId, { $set: { private: setToPrivate } });","  }","});","","if (Meteor.isServer) {","  // Only publish tasks that are public or belong to the current user","  Meteor.publish(\"tasks\", function () {","    return Tasks.find({","      $or: [","        { private: {$ne: true} },","        { owner: this.userId }","      ]","    });","  });","}"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":0},"end":{"row":72,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":2},"end":{"row":72,"column":4},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":4},"end":{"row":72,"column":5},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":5},"end":{"row":72,"column":6},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":6},"end":{"row":72,"column":7},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":7},"end":{"row":72,"column":8},"action":"insert","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":8},"end":{"row":72,"column":9},"action":"insert","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":9},"end":{"row":72,"column":10},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":10},"end":{"row":72,"column":11},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":11},"end":{"row":72,"column":12},"action":"insert","lines":["T"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":12},"end":{"row":72,"column":13},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":13},"end":{"row":72,"column":14},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":14},"end":{"row":72,"column":15},"action":"insert","lines":["k"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":15},"end":{"row":72,"column":16},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":16},"end":{"row":72,"column":17},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":17},"end":{"row":72,"column":18},"action":"insert","lines":["M"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":18},"end":{"row":72,"column":19},"action":"insert","lines":["O"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":19},"end":{"row":72,"column":20},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":19},"end":{"row":72,"column":20},"action":"remove","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":18},"end":{"row":72,"column":19},"action":"remove","lines":["O"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":17},"end":{"row":72,"column":18},"action":"remove","lines":["M"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":17},"end":{"row":72,"column":18},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":18},"end":{"row":72,"column":19},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":19},"end":{"row":72,"column":20},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":20},"end":{"row":72,"column":21},"action":"insert","lines":["M"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":21},"end":{"row":72,"column":22},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":22},"end":{"row":72,"column":23},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":23},"end":{"row":72,"column":24},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":24},"end":{"row":72,"column":25},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":25},"end":{"row":72,"column":26},"action":"insert","lines":["D"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":26},"end":{"row":72,"column":27},"action":"insert","lines":["B"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":27},"end":{"row":72,"column":28},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":28},"end":{"row":72,"column":29},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":29},"end":{"row":72,"column":30},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":30},"end":{"row":72,"column":31},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":31},"end":{"row":72,"column":32},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":32},"end":{"row":72,"column":33},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":32},"end":{"row":72,"column":33},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":31},"end":{"row":72,"column":32},"action":"remove","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":30},"end":{"row":72,"column":31},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":29},"end":{"row":72,"column":30},"action":"remove","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":28},"end":{"row":72,"column":29},"action":"remove","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":27},"end":{"row":72,"column":28},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":15},"end":{"row":72,"column":16},"action":"remove","lines":["s"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":5,"column":0},"end":{"row":5,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1427734117382,"hash":"092e44bcc151a8499c17601d3d709b14a77c62d3"}